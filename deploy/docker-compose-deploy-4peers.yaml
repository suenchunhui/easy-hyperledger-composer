version: '2'

networks:
  fabric_net:
    external: true
  cc0_net:
  cc1_net:
  cc2_net:
  cc3_net:
  ca_net:

services:
  orderer.example.com:
    extends:
      file:   base/docker-compose-base.yaml
      service: orderer.example.com
    container_name: orderer.example.com
    environment:
      - CORE_CHAINCODE_STARTUPTIMEOUT=2400s
      - CORE_CHAINCODE_EXECUTETIMEOUT=2400s
    restart: always
    networks:
      - fabric_net

  couchdb0:
    container_name: couchdb0
    image: hyperledger/fabric-couchdb:0.4.10
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin0 # FIXME: randomize credentials in production
      - COUCHDB_PASSWORD=admin0
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    # ports:
    #   - "5984:5984"
    networks:
      - cc0_net
    
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer0.org1.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin0
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin0
      - CORE_CHAINCODE_STARTUPTIMEOUT=2400s
      - CORE_CHAINCODE_EXECUTETIMEOUT=2400s
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deploy_cc0_net
    restart: always
    depends_on:
      - couchdb0
    networks:
      - fabric_net
      - cc0_net

  couchdb1:
    container_name: couchdb1
    image: hyperledger/fabric-couchdb:0.4.10
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin1
      - COUCHDB_PASSWORD=admin1
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    # ports:
    #   - "6984:5984"
    networks:
      - cc1_net
    
  peer1.org1.example.com:
    container_name: peer1.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer1.org1.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin1
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin1
      - CORE_CHAINCODE_STARTUPTIMEOUT=2400s
      - CORE_CHAINCODE_EXECUTETIMEOUT=2400s
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deploy_cc1_net
    restart: always
    depends_on:
      - couchdb1
    networks:
      - fabric_net
      - cc1_net

  couchdb2:
    container_name: couchdb2
    image: hyperledger/fabric-couchdb:0.4.10
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin2
      - COUCHDB_PASSWORD=admin2
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    # ports:
    #   - "7984:5984"
    networks:
      - cc2_net
    
  peer2.org1.example.com:
    container_name: peer2.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer2.org1.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb2:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin2
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin2
      - CORE_CHAINCODE_STARTUPTIMEOUT=2400s
      - CORE_CHAINCODE_EXECUTETIMEOUT=2400s
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deploy_cc2_net
    restart: always
    depends_on:
      - couchdb2
    networks:
      - fabric_net
      - cc2_net

  couchdb3:
    container_name: couchdb3
    image: hyperledger/fabric-couchdb:0.4.10
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=admin3
      - COUCHDB_PASSWORD=admin3
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    # ports:
    #   - "8984:5984"
    networks:
      - cc3_net
    
  peer3.org1.example.com:
    container_name: peer3.org1.example.com
    extends:
      file:  base/docker-compose-base.yaml
      service: peer3.org1.example.com
    environment:
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb3:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin3
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=admin3
      - CORE_CHAINCODE_STARTUPTIMEOUT=2400s
      - CORE_CHAINCODE_EXECUTETIMEOUT=2400s
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deploy_cc3_net
    restart: always
    depends_on:
      - couchdb3
    networks:
      - fabric_net
      - cc3_net

  ca.org1.example.com:
    container_name: ca.org1.example.com
    image: hyperledger/fabric-ca:x86_64-1.1.0
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
    command: /bin/bash -c 'cp /etc/ca-root/*_sk /etc/hyperledger/fabric-ca-server/ca-key.pem ; cp /etc/ca-root/*pem /etc/hyperledger/fabric-ca-server/ca-cert.pem ; fabric-ca-server start -b admin:adminpw'
    volumes:
      - CA:/etc/ca-root:ro
    ports:
      - 7055:7054
    restart: always
    networks:
      - ca_net

volumes:
  Crypto:
    external: true
  Scripts:
    external: true
  Channel:
    external: true
  CA:
    external: true
  deploy_orderer_volume:
    external: true
  deploy_peer0_crypto_msp_volume:
    external: true
  deploy_peer1_crypto_msp_volume:
    external: true
  deploy_peer2_crypto_msp_volume:
    external: true
  deploy_peer3_crypto_msp_volume:
    external: true
  deploy_peer0_crypto_tls_volume:
    external: true
  deploy_peer1_crypto_tls_volume:
    external: true
  deploy_peer2_crypto_tls_volume:
    external: true
  deploy_peer3_crypto_tls_volume:
    external: true